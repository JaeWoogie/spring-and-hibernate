package com.spring.rest;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.PostConstruct;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.spring.entity.Student;

@RestController
@RequestMapping("/api")
public class StudentRestController {
	
	private List<Student> theStudents;
	
	@PostConstruct
	public void loadData() {
		
		theStudents = new ArrayList<>();
		
		theStudents.add(new Student("eva", "lefever"));
		theStudents.add(new Student("jae", "Lee"));
		theStudents.add(new Student("lisa", "lefever"));
	}

	//define endpoint for "/student"
	@GetMapping("/students")
	public List<Student> getStudents() {
		
		return theStudents;
	}
	
	//define end point to access to single student info
	@GetMapping("/students/{studentId}")
	public Student getstudent(@PathVariable int studentId) {
		
		//just index of the list
		
		//check the student id
		if((studentId >= theStudents.size()) || (studentId < 0)) {
			throw new StudentNotFoundException("Student id is not found " + studentId);
		}
		return theStudents.get(studentId);
	}
	
	//add exception handler
	@ExceptionHandler
	public ResponseEntity<StudentErrorResponse> handleException(StudentNotFoundException exc) {
		
		//create a studentErrorResponse
		
		StudentErrorResponse error = new StudentErrorResponse();
		
		error.setStatus(HttpStatus.NOT_FOUND.value());
		error.setMessage(exc.getMessage());
		error.setTimeStamp(System.currentTimeMillis());
		
		//return response entity
		
		return new ResponseEntity<>(error, HttpStatus.NOT_FOUND);
	}
	
}
